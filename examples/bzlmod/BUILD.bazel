load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@python_versions//3.12:defs.bzl", py_binary_312 = "py_binary")
load(
    "@rules_pycross//pycross:defs.bzl",
    "pycross_lock_file",
    "pycross_poetry_lock_model",
)
load("@rules_python//python:defs.bzl", "py_binary")

py_binary(
    name = "ipython",
    srcs = ["ipython.py"],
    deps = [
        "@pdm_deps//:amqp-mock",
        "@pdm_deps//:ipython",
    ],
)

py_binary_312(
    name = "ipython_312",
    srcs = ["ipython.py"],
    main = "ipython.py",
    deps = [
        "@pdm_deps//:ipython",
    ],
)

py_binary(
    name = "ipython_from_lock_file",
    srcs = ["ipython.py"],
    main = "ipython.py",
    deps = [
        "@poetry_lock_file//deps:ipython",
    ],
)

py_binary(
    name = "cowsay_from_lock_file",
    srcs = ["cowsay.py"],
    main = "cowsay.py",
    deps = [
        "@poetry_lock_file//deps:cowsay",
    ],
)

pycross_poetry_lock_model(
    name = "example_lock_model",
    lock_file = "//:poetry.lock",
    project_file = "//:pyproject.toml",
)

pycross_lock_file(
    name = "poetry_lock",
    out = "updated_poetry_lock.bzl",
    lock_model_file = ":example_lock_model",
    target_environments = ["@pycross_environments//:environments"],
)

write_source_files(
    name = "update_locks",
    files = {
        "poetry_lock.bzl": ":updated_poetry_lock.bzl",
    },
)
