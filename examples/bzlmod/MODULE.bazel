module(
    name = "example_bzlmod",
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(name = "aspect_bazel_lib", version = "1.38.1")
bazel_dep(name = "rules_python", version = "0.29.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = "3.11.5",
)
use_repo(python, "python_versions")

bazel_dep(name = "rules_pycross", version = "0.0.0")
local_path_override(
    module_name = "rules_pycross",
    path = "../..",
)

environments = use_extension("@rules_pycross//pycross/extensions:environments.bzl", "environments")
use_repo(environments, "pycross_environments")

# Use the lock_import extension to import external lock files.
lock_import = use_extension("@rules_pycross//pycross/extensions:lock_import.bzl", "lock_import")

# Import from PDM
lock_import.import_pdm(
    lock_file = "//:pdm.lock",
    project_file = "//:pyproject.toml",
    repo = "pdm_deps",
)

# Import from Poetry
lock_import.import_poetry(
    lock_file = "//:poetry.lock",
    project_file = "//:pyproject.toml",
    repo = "poetry_deps",
)

# Specify per-package overrides. Here we say that we want to build ipython from an sdist.
lock_import.package(
    name = "ipython",
    always_build = True,
    build_dependencies = [
        "setuptools",
        "wheel",
    ],
    repo = "pdm_deps",
)

# Specify per-package overrides. Here we say that we want certain files excluded during installation.
lock_import.package(
    name = "amqp-mock",
    install_exclude_globs = [
        "tests/**",
    ],
    repo = "pdm_deps",
)

# The actual repos are loaded from the lock_repos extension.
lock_repos = use_extension("@rules_pycross//pycross/extensions:lock_repos.bzl", "lock_repos")
use_repo(lock_repos, "pdm_deps", "poetry_deps")

lock_file = use_extension("@rules_pycross//pycross/extensions:lock_file.bzl", "lock_file")
lock_file.instantiate(
    name = "poetry_lock_file",
    lock_file = "//:poetry_lock.bzl",
)
use_repo(lock_file, "poetry_lock_file")
