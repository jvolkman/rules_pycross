bazel_dep(name = "hermetic_cc_toolchain", version = "3.1.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_cc", version = "0.1.0")
bazel_dep(name = "rules_python", version = "1.1.0")
bazel_dep(name = "rules_foreign_cc")
single_version_override(
    module_name = "rules_foreign_cc",
    version = "0.13.0",
    # patches = ["//patches:rules_foreign_cc.iconv.patch"],
    # patch_strip = 1,
)

bazel_dep(name = "rules_pycross", version = "0.0.0")
local_path_override(
    module_name = "rules_pycross",
    path = "../..",
)

# Third party deps
include("//third_party/boringssl:repositories.MODULE.bazel")

include("//third_party/openblas:repositories.MODULE.bazel")

include("//third_party/openssl:repositories.MODULE.bazel")

include("//third_party/postgresql:repositories.MODULE.bazel")

include("//third_party/zlib:repositories.MODULE.bazel")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = "3.10.8",
)
use_repo(python, "python_versions")

pycross = use_extension("@rules_pycross//pycross/extensions:pycross.bzl", "pycross")
pycross.configure_environments(
    platforms = [
        "aarch64-apple-darwin",
        "aarch64-unknown-linux-gnu",
        "x86_64-unknown-linux-gnu",
        "x86_64-unknown-linux-musl",
    ],
    python_versions = [
        "3.10.8",
    ],
)

# Use the lock_import extension to import external lock files.
lock_import = use_extension("@rules_pycross//pycross/extensions:lock_import.bzl", "lock_import")

# Import from PDM
lock_import.import_pdm(
    default_alias_single_version = True,
    lock_file = "//:pdm.lock",
    project_file = "//:pyproject.toml",
    repo = "pydeps",
)
lock_import.package(
    name = "numpy",
    always_build = True,
    build_dependencies = [
        "cython",
        "setuptools",
        "wheel",
    ],
    build_target = "@//deps/numpy",
    repo = "pydeps",
)
lock_import.package(
    name = "pandas",
    always_build = True,
    build_dependencies = [
        "cython",
        "setuptools",
        "wheel",
    ],
    repo = "pydeps",
)
lock_import.package(
    name = "psycopg2",
    build_target = "@//deps/psycopg2",
    repo = "pydeps",
)
lock_import.package(
    name = "setproctitle",
    always_build = True,
    build_dependencies = [
        "setuptools",
        "wheel",
    ],
    repo = "pydeps",
)

lock_repos = use_extension("@rules_pycross//pycross/extensions:lock_repos.bzl", "lock_repos")
use_repo(lock_repos, "pydeps")

zig_toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(zig_toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.19",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.28",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
)
