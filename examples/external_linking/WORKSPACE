workspace(
    name = "jvolkman_rules_pycross_example",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_foreign_cc",
    sha256 = "2a4d07cd64b0719b39a7c12218a3e507672b82a97b98c6a89d38565894cf7c51",
    strip_prefix = "rules_foreign_cc-0.9.0",
    url = "https://github.com/bazelbuild/rules_foreign_cc/archive/refs/tags/0.9.0.tar.gz",
)

load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")

# This sets up some common toolchains for building targets. For more details, please see
# https://bazelbuild.github.io/rules_foreign_cc/0.9.0/flatten.html#rules_foreign_cc_dependencies
rules_foreign_cc_dependencies()

http_archive(
    name = "rules_python",
    sha256 = "497ca47374f48c8b067d786b512ac10a276211810f4a580178ee9b9ad139323a",
    strip_prefix = "rules_python-0.16.1",
    url = "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.16.1.tar.gz",
)

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python3_10",
    # Available versions are listed in @rules_python//python:versions.bzl.
    # We recommend using the same version your team is already standardized on.
    python_version = "3.10",
)

load("@python3_10//:defs.bzl", "interpreter")

local_repository(
    name = "jvolkman_rules_pycross",
    path = "../..",
)

load("@jvolkman_rules_pycross//pycross:repositories.bzl", "rules_pycross_dependencies")

rules_pycross_dependencies(python_interpreter_target = interpreter)

# Setup a CC toolchain using bazel-zig-cc
# https://git.sr.ht/~motiejus/bazel-zig-cc
BAZEL_ZIG_CC_VERSION = "v0.9.2"

http_archive(
    name = "bazel-zig-cc",
    sha256 = "73afa7e1af49e3dbfa1bae9362438cdc51cb177c359a6041a7a403011179d0b5",
    strip_prefix = "bazel-zig-cc-{}".format(BAZEL_ZIG_CC_VERSION),
    urls = ["https://git.sr.ht/~motiejus/bazel-zig-cc/archive/{}.tar.gz".format(BAZEL_ZIG_CC_VERSION)],
)

load(
    "@bazel-zig-cc//toolchain:defs.bzl",
    "URL_FORMAT_RELEASE",
    zig_toolchains = "toolchains",
)

zig_version = "0.10.0"

zig_host_platform_sha256 = {
    "linux-aarch64": "09ef50c8be73380799804169197820ee78760723b0430fa823f56ed42b06ea0f",
    "linux-x86_64": "631ec7bcb649cd6795abe40df044d2473b59b44e10be689c15632a0458ddea55",
    "macos-aarch64": "02f7a7839b6a1e127eeae22ea72c87603fb7298c58bc35822a951479d53c7557",
    "macos-x86_64": "3a22cb6c4749884156a94ea9b60f3a28cf4e098a69f08c18fbca81c733ebfeda",
}

zig_toolchains(
    host_platform_sha256 = zig_host_platform_sha256,
    url_formats = [
        URL_FORMAT_RELEASE,
    ],
    version = zig_version,
)

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.19",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.28",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
)

load("//:example_lock.bzl", "repositories")
repositories()


http_archive(
    name = "openblas",
    urls = ["https://github.com/xianyi/OpenBLAS/releases/download/v0.3.21/OpenBLAS-0.3.21.tar.gz"],
    sha256 = "f36ba3d7a60e7c8bcc54cd9aaa9b1223dd42eaf02c811791c37e8ca707c241ca",
    strip_prefix = "OpenBLAS-0.3.21",
    build_file_content = """\
filegroup(
    name = "all",
    srcs = glob(["**/*"]),
    visibility = ["//visibility:public"],
)
    """,
)


load("//deps/psycopg2:repositories.bzl", pg_repositories = "repositories")
pg_repositories()
